<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SC Site</title>
    <link>https://sam33339999.github.io/posts/</link>
    <description>Recent content in Posts on SC Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Dec 2022 22:13:33 +0800</lastBuildDate><atom:link href="https://sam33339999.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>phpmicro</title>
      <link>https://sam33339999.github.io/posts/2022/12/phpmicro/</link>
      <pubDate>Sat, 03 Dec 2022 22:13:33 +0800</pubDate>
      
      <guid>https://sam33339999.github.io/posts/2022/12/phpmicro/</guid>
      <description>phpmicro repo repo-wiki oschina 相關文章 依賴項目 1 2 3 4 5 6 7 8 9 10 11 12 bison -&amp;gt; v3 以上 https://www.gnu.org/software/bison/ # 需要下載回來自行 compile ； # 編譯完後，記得將 ./data 資料移動入 /usr/local/share/bison/下。 # 此時你的文件下應該會有 bison 需要的檔案 # ➜ pwd # /usr/local/share/bison # ➜ ls # m4sugar skeletons xslt brew install re2c brew install pkg-config 編譯: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # 先 clone 回 php-src 選定你要的版本。 git clone git@github.</description>
    </item>
    
    <item>
      <title>PHP Swoole Workshop</title>
      <link>https://sam33339999.github.io/posts/2022/12/php-swoole-workshop/</link>
      <pubDate>Sat, 03 Dec 2022 00:11:41 +0800</pubDate>
      
      <guid>https://sam33339999.github.io/posts/2022/12/php-swoole-workshop/</guid>
      <description>PHP Swoole 工作坊 講者 Albert Chen Github Use-Github-Repository: swoole-workshop-2022 In swoole-workshop-2022 Repo 1-swoole-server: 建立一個簡易的 server -&amp;gt; Go, node.js, Swoole 比較。 TCP, WebSocket, HTTP2 simple code 2-memory CacheInterface.php 快取接口 atomic_counter.php cache_server.php (CacheInterface.php, 實踐所需要的CacheTtl.php) counter.php table.php (\swoole\table class) 3-coroutine 4-laravel-octane (基於 Swoole 去將 Laravel 加速) Benchmark with 1.swoole-server in Apple M2 / 24GB mbp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 ## Swoole-cli 這邊測試沒有指定，似乎只開 1 worker ➜ swoole-workshop-2022 git:(master) ✗ wrk -c 100 -t 4 http://127.</description>
    </item>
    
    <item>
      <title>PHP Closure Anonymous</title>
      <link>https://sam33339999.github.io/posts/2022/12/php-closure-anonymous/</link>
      <pubDate>Fri, 02 Dec 2022 02:03:58 +0800</pubDate>
      
      <guid>https://sam33339999.github.io/posts/2022/12/php-closure-anonymous/</guid>
      <description>PHP Closure Anonymous PHP 閉包匿名類 匿名類別繼承，且 __construct() 初始化匿名函數
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class TestAnonymous { public function __construct( protected string $name ) { /** PHP 8 Syntax, With Construct initial attributes */ } public function hello(): void { echo &amp;#34;Hello world - {$this-&amp;gt;name} \n&amp;#34;; } public function helloWithAnonymous() { $newClass = new Class(&amp;#39;Sunny&amp;#39;) extends TestAnonymous { public function hello(): void { parent::hello(); echo &amp;#34;Hello John - {$this-&amp;gt;name} \n&amp;#34;; } }; // 這裡記得要有分號。 $newClass-&amp;gt;hello(); } } $ta = new TestAnonymous(&amp;#39;Sam&amp;#39;); $ta-&amp;gt;hello(); $ta-&amp;gt;helloWithAnonymous(); </description>
    </item>
    
    <item>
      <title>Swoole Cli</title>
      <link>https://sam33339999.github.io/posts/2022/12/swoole-cli/</link>
      <pubDate>Fri, 02 Dec 2022 02:00:00 +0800</pubDate>
      
      <guid>https://sam33339999.github.io/posts/2022/12/swoole-cli/</guid>
      <description>Swoole.com Swoole.com/download Swoole-cli segment fault Github-Repo-&amp;gt; swoole-cli Swoole-Cli 介紹 Swoole-Cli 是一個 PHP 的 binary 集成發行版，集成了 swoole, php kernel, php-cli, php-fpm 等等多個常用拓展。 Swoole-Cli 是全靜態編譯打包而成，不需要依賴任何的作業系統 so 動態鏈結庫；具有良好的移植性， 可以在任意 Linux 系統間複製。
1 2 3 4 5 6 7 8 # 顯示版本 swoole-cli -v # 顯示當前模組 swoole-cli -m # 軟連結 -&amp;gt; php ln -s /usr/bin/swoole-cli /usr/bin/php 配置文件 swoole-cli 內建已經有集成 php-fpm 所以可以使用 -P 來啟動 fpm
參數 -h 幫助
-P 啟動 php-fpm
-p 啟動 php-fpm 的進程管理器前綴名稱 -F, --nodaemonize -R, --allow-to-run-as-root -c 指定 php.</description>
    </item>
    
    <item>
      <title>Kafka - 1</title>
      <link>https://sam33339999.github.io/posts/2022/11/kafka_1/</link>
      <pubDate>Tue, 29 Nov 2022 01:51:22 +0800</pubDate>
      
      <guid>https://sam33339999.github.io/posts/2022/11/kafka_1/</guid>
      <description>歷史背景 LinkedIn 開發的 MQ 相關軟體。 基於 Java ，舊版本中依賴於 ZooKeeper
在 2.8 版 (Early Access Release) 版本開始允許不使用 ZooKeeper (KRaft mode)， 變成內建應用完成對 Zookeeper 的解依賴。
延伸閱讀 Apache Kafka 3.0.0持續更新共識機制KRaft，並著手清理舊支援與設定
KRaft 為共識算法。 以往 ZooKeeper 在 Kafka 中扮演協調代理的角色，當代理服務器啟動時， 需要向 ZooKeeper 註冊，並由 ZooKeeper 管理代理狀態，協助代理間溝通的資訊同步，因此過去 Kafka 需依賴 ZooKeeper 才能運作。
安裝 官方網站、安裝方法 Official 官方網站 Download 下載點 SDKMAN 用於下載 JDK 工具 安裝 Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 # 安裝 SDK MAN curl -s &amp;#34;https://get.</description>
    </item>
    
    <item>
      <title>Get Started Hugo</title>
      <link>https://sam33339999.github.io/posts/2022/11/get-started-hugo/</link>
      <pubDate>Tue, 29 Nov 2022 01:05:56 +0800</pubDate>
      
      <guid>https://sam33339999.github.io/posts/2022/11/get-started-hugo/</guid>
      <description>開始使用 Hugo 建立靜態網頁。 佈景主題使用 Diary Github
參考: 搭建GithubPage博客 Hugo 教學 &amp;ndash; 基礎篇 Hugo 教學 &amp;ndash; 進階篇 自己的設定檔 config.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 theme = &amp;#34;diary&amp;#34; # 這裡的 theme 會去查詢你目錄下的 themes 資料夾下面，是否有無相同名稱的資料夾，來當作佈景主題 [markup] [markup.highlight] codeFences = true # 程式碼圍欄 guessSyntax = true # 猜語法 hl_Lines = &amp;#34;&amp;#34; lineNoStart = 1 # 行數從 1 起算 lineNos = true # 是否顯示行號 lineNumbersInTable = true # 表格內是否顯示行號 # https://gohugo.</description>
    </item>
    
  </channel>
</rss>
